<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
	xmlns:System="clr-namespace:System;assembly=mscorlib" 
    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    x:Class="Zunzun.App.Views.Xaml.Resources"
    mc:Ignorable="d" 
    xmlns:Zunzun_App_Controls="clr-namespace:Zunzun.App.Controls" 
    xmlns:Zunzun_App_Converters="clr-namespace:Zunzun.App.Converters">
	<!-- Resource dictionary entries should be defined here. -->
    <Zunzun_App_Converters:DateToString x:Key="DateToString"/>
    <Zunzun_App_Converters:SourceToString x:Key="SourceToString"/>
    <SolidColorBrush x:Key="ContentBrush" Color="#FFC9C9C9"/>
	<SolidColorBrush x:Key="InfoBrush" Color="#FF919191"/>
	<System:Double x:Key="ContentFontSize">12</System:Double>
	<System:Double x:Key="InfoFontSize">10</System:Double>
	<SolidColorBrush x:Key="Background" Color="#BF4E4E4E"/>
	<SolidColorBrush x:Key="ListBorder" Color="#828790"/>
	<Style x:Key="TweetsListBox" TargetType="{x:Type ListBox}">
		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<Border x:Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="1">
						<ScrollViewer Padding="{TemplateBinding Padding}" Template="{DynamicResource TweetsScrollViewerControlTemplate}" Focusable="false">
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="TweetsScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
		<Grid x:Name="Grid" Background="{TemplateBinding Background}">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="Auto"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="*"/>
				<RowDefinition Height="Auto"/>
			</Grid.RowDefinitions>
			<Rectangle x:Name="Corner" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Column="1" Grid.Row="1"/>
			<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Margin="{TemplateBinding Padding}" Grid.Column="0" Grid.Row="0" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False"/>
			<ScrollBar x:Name="PART_VerticalScrollBar" Cursor="Arrow" Style="{DynamicResource DefaultScrollBar}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" AutomationProperties.AutomationId="VerticalScrollBar" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
			<ScrollBar x:Name="PART_HorizontalScrollBar" Cursor="Arrow" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" AutomationProperties.AutomationId="HorizontalScrollBar" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}"/>
		</Grid>
	</ControlTemplate>
	<LinearGradientBrush x:Key="VerticalScrollBarBackground" EndPoint="1,0" StartPoint="0,0">
		<GradientStop Color="#E1E1E1" Offset="0"/>
		<GradientStop Color="#EDEDED" Offset="0.20"/>
		<GradientStop Color="#EDEDED" Offset="0.80"/>
		<GradientStop Color="#E3E3E3" Offset="1"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="ScrollBarDisabledBackground" Color="#F4F4F4"/>
	<Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome" SnapsToDevicePixels="true" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<LinearGradientBrush x:Key="BTTBrush" EndPoint="0.5,1" StartPoint="0.5,0" SpreadMethod="Reflect">
		<GradientStop Color="#BF4D4C4C" Offset="0"/>
		<GradientStop Color="#BFABABAB" Offset="1"/>
		<GradientStop Color="#BF8E8E8E" Offset="0.494"/>
	</LinearGradientBrush>
	<Thickness x:Key="NoThickness">0</Thickness>
	<Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border BorderBrush="{DynamicResource InfoBrush}" BorderThickness="1" CornerRadius="2" RenderTransformOrigin="0.5,0.5">
						<Border.RenderTransform>
							<TransformGroup>
								<ScaleTransform/>
								<SkewTransform/>
								<RotateTransform Angle="0"/>
								<TranslateTransform/>
							</TransformGroup>
						</Border.RenderTransform>
						<Border.Background>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
								<LinearGradientBrush.RelativeTransform>
									<TransformGroup>
										<ScaleTransform CenterX="0.5" CenterY="0.5"/>
										<SkewTransform CenterX="0.5" CenterY="0.5"/>
										<RotateTransform Angle="-90" CenterX="0.5" CenterY="0.5"/>
										<TranslateTransform/>
									</TransformGroup>
								</LinearGradientBrush.RelativeTransform>
								<GradientStop Color="#7F6E6E6E" Offset="0"/>
								<GradientStop Color="#7F6E6E6E" Offset="1"/>
								<GradientStop Color="#7F909090" Offset="0.39"/>
								<GradientStop Color="#7FA09F9F" Offset="0.769"/>
							</LinearGradientBrush>
						</Border.Background>
						<Label Content="|||" Foreground="{DynamicResource ContentBrush}" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Padding="{DynamicResource NoThickness}" FontSize="{DynamicResource InfoFontSize}" FontWeight="Light">
							<Label.Effect>
								<DropShadowEffect ShadowDepth="3" BlurRadius="15"/>
							</Label.Effect>
							<Label.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform Angle="90"/>
									<TranslateTransform/>
								</TransformGroup>
							</Label.RenderTransform>
						</Label>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<LinearGradientBrush x:Key="HorizontalScrollBarBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#E1E1E1" Offset="0"/>
		<GradientStop Color="#EDEDED" Offset="0.20"/>
		<GradientStop Color="#EDEDED" Offset="0.80"/>
		<GradientStop Color="#E3E3E3" Offset="1"/>
	</LinearGradientBrush>
	<Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle Fill="{TemplateBinding Background}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ScrollUpBTT" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border Background="{DynamicResource BTTBrush}" BorderBrush="{DynamicResource InfoBrush}" BorderThickness="1" CornerRadius="2">
						<Label Content="^" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource ContentBrush}" Padding="{DynamicResource NoThickness}" FontSize="{DynamicResource InfoFontSize}" FontWeight="Bold" Margin="0,2,0,0"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="DefaultScrollBar" TargetType="{x:Type ScrollBar}">
		<Setter Property="Background" Value="{StaticResource VerticalScrollBarBackground}"/>
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
		<Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollBar}">
					<Grid x:Name="Bg" SnapsToDevicePixels="true">
						<Grid.RowDefinitions>
							<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
							<RowDefinition Height="0.00001*"/>
							<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
						</Grid.RowDefinitions>
						<RepeatButton Style="{DynamicResource ScrollUpBTT}" IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineUpCommand}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow" d:IsHidden="True"/>
						<Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1" IsDirectionReversed="true">
							<Track.Thumb>
								<Thumb Style="{StaticResource ScrollBarThumb}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper"/>
							</Track.Thumb>
							<Track.IncreaseRepeatButton>
								<RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageDownCommand}"/>
							</Track.IncreaseRepeatButton>
							<Track.DecreaseRepeatButton>
								<RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageUpCommand}"/>
							</Track.DecreaseRepeatButton>
						</Track>
						<RepeatButton Style="{DynamicResource ScrollDownBTT}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Command="{x:Static ScrollBar.LineDownCommand}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Width" Value="Auto"/>
				<Setter Property="MinWidth" Value="0"/>
				<Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
				<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
				<Setter Property="Background" Value="{StaticResource HorizontalScrollBarBackground}"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollBar}">
							<Grid x:Name="Bg" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
								<Grid.ColumnDefinitions>
									<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
									<ColumnDefinition Width="0.00001*"/>
									<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
								</Grid.ColumnDefinitions>
								<RepeatButton Style="{StaticResource ScrollBarButton}" IsEnabled="{TemplateBinding IsMouseOver}" Command="{x:Static ScrollBar.LineLeftCommand}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow"/>
								<Track x:Name="PART_Track" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Column="1">
									<Track.DecreaseRepeatButton>
										<RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}" Command="{x:Static ScrollBar.PageLeftCommand}"/>
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
										<RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}" Command="{x:Static ScrollBar.PageRightCommand}"/>
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
										<Thumb Style="{StaticResource ScrollBarThumb}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper"/>
									</Track.Thumb>
								</Track>
								<RepeatButton Style="{StaticResource ScrollBarButton}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsEnabled" Value="false">
									<Setter Property="Background" TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground}"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="ScrollDownBTT" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Border BorderBrush="{DynamicResource InfoBrush}" BorderThickness="1" CornerRadius="2" Background="{DynamicResource BTTBrush}">
						<Label Content="^" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource ContentBrush}" RenderTransformOrigin="0.5,0.5" Padding="{DynamicResource NoThickness}" FontWeight="Bold" FontSize="{DynamicResource InfoFontSize}">
							<Label.RenderTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform Angle="180"/>
									<TranslateTransform/>
								</TransformGroup>
							</Label.RenderTransform>
						</Label>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ButtonFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="2" SnapsToDevicePixels="true"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#F3F3F3" Offset="0"/>
		<GradientStop Color="#EBEBEB" Offset="0.5"/>
		<GradientStop Color="#DDDDDD" Offset="0.5"/>
		<GradientStop Color="#CDCDCD" Offset="1"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
	<Style x:Key="DefaultButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
		<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Margin="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
						<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsKeyboardFocused" Value="true"/>
						<Trigger Property="ToggleButton.IsChecked" Value="true"/>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="#ADADAD"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="TweetsItemContainerStyle" TargetType="{x:Type ListBoxItem}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="Padding" Value="2,0,0,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Border CornerRadius="2,2,2,2" BorderThickness="1,1,1,1" Margin="0,1,0,1">
						<Border.Background>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
								<GradientStop Color="#7FFFFFFF" Offset="0"/>
								<GradientStop Color="#FF000000" Offset="1"/>
								<GradientStop Color="#4C030303" Offset="0.098"/>
								<GradientStop Color="#55020202" Offset="0.76"/>
							</LinearGradientBrush>
						</Border.Background>
						<Border.BorderBrush>
							<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
								<GradientStop Color="#00000000" Offset="0"/>
								<GradientStop Color="#FF000000" Offset="1"/>
							</LinearGradientBrush>
						</Border.BorderBrush>
						<Grid Background="{x:Null}" Grid.IsSharedSizeScope="False" Width="Auto" Height="Auto">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto"/>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="0.661*"/>
								<RowDefinition Height="0*"/>
								<RowDefinition Height="0.339*"/>
							</Grid.RowDefinitions>
							<Image x:Name="Picture" MouseDown="OnShowUserHome" Cursor="Hand" Grid.ColumnSpan="1" Source="{Binding Picture, Mode=Default}" Stretch="UniformToFill" Width="50" Height="50" Margin="5,5,5,0" VerticalAlignment="Top" Visibility="{Binding Path=PictureVisibility, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBox}}}" />
							<Zunzun_App_Controls:RichTextBlock Margin="2,3,2,18" x:Name="ContentTXT" Foreground="{DynamicResource ContentBrush}" TextWrapping="Wrap" FontSize="{DynamicResource ContentFontSize}" Grid.Column="1" Text="{Binding Content, Mode=Default}"/>
							<Grid Grid.Row="1" Grid.ColumnSpan="2">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="*"/>
								</Grid.ColumnDefinitions>
								<TextBlock Background="{x:Null}" d:LayoutOverrides="Height" x:Name="Author" FontSize="{DynamicResource InfoFontSize}" Foreground="{DynamicResource InfoBrush}" Text="{Binding Author.Name, Mode=Default}" TextWrapping="Wrap" Margin="2,0,0,2"/>
								<TextBlock Grid.Column="1" TextWrapping="Wrap" x:Name="Date" Foreground="{DynamicResource InfoBrush}" Text="{Binding Date, Converter={StaticResource DateToString}, ConverterParameter=ddd\, MMM d HH:mm, Mode=OneWay}" FontSize="{DynamicResource InfoFontSize}" Margin="2,0,0,0"/>
								<TextBlock Grid.Column="2" TextWrapping="Wrap" x:Name="Source" FontSize="{DynamicResource InfoFontSize}" Text="{Binding Source, Converter={StaticResource SourceToString}, Mode=Default}" HorizontalAlignment="Right" Foreground="{DynamicResource InfoBrush}" Margin="0,0,2,0"/>
							</Grid>
							<StackPanel Grid.RowSpan="1" Grid.Row="0" Grid.Column="1" VerticalAlignment="Bottom" HorizontalAlignment="Right" Orientation="Horizontal">
								<Button x:Name="Reply" Click="OnReply" Content="@" Tag="{TemplateBinding DataContext}" Style="{DynamicResource DefaultButtonStyle}" Background="{DynamicResource BTTBrush}" BorderBrush="{DynamicResource InfoBrush}" FontSize="{DynamicResource InfoFontSize}" Foreground="{DynamicResource ContentBrush}" Width="18" Height="18" />
								<Button x:Name="Retweet" Click="OnRetweet" Content="RT" Tag="{TemplateBinding DataContext}" Style="{DynamicResource DefaultButtonStyle}" Background="{DynamicResource BTTBrush}" BorderBrush="{DynamicResource InfoBrush}" FontSize="{DynamicResource InfoFontSize}" Foreground="{DynamicResource ContentBrush}" Width="18" Height="18" />
								<Button x:Name="DirectMessage" Click="OnDirectMessage" Content="D" Tag="{TemplateBinding DataContext}" Style="{DynamicResource DefaultButtonStyle}" Background="{DynamicResource BTTBrush}" BorderBrush="{DynamicResource InfoBrush}" FontSize="{DynamicResource InfoFontSize}" Foreground="{DynamicResource ContentBrush}" Width="18" Height="18" />
							</StackPanel>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="Selector.IsSelectionActive" Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="UserHomeTabControlStyle" TargetType="{x:Type TabControl}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabControl}">
					<Grid KeyboardNavigation.TabNavigation="Local">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						
						<!-- TabPanel is a layout container which allows the TabItems to wrap and re-order when selected
						The implementation knows to use this control because it is marked IsItemsHost = True -->
						<TabPanel Grid.Row="0" Margin="0,0,4,-1" x:Name="HeaderPanel" Background="Transparent" IsItemsHost="True" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1"/>
						
						<Border Grid.Row="1" x:Name="Border" CornerRadius="2" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2">
							
							<!-- The implementation switches the content. This control must be named PART_SelectedContentHost -->
							<ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"/>
							
						</Border>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
							<Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
						</Trigger>
					</ControlTemplate.Triggers>
				
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="DisabledBrush" Color="#3FEEEEEE"/>
	<Style x:Key="UserHomeTabItemStyle" d:IsControlPart="True" TargetType="{x:Type TabItem}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Grid>
						<Border Margin="0,0,-4,0" x:Name="Border" Background="{DynamicResource Background}" BorderBrush="{DynamicResource InfoBrush}" BorderThickness="1,1,1,1" CornerRadius="2,12,0,0">
							<ContentPresenter HorizontalAlignment="Center" Margin="12,2,12,2" x:Name="ContentSite" VerticalAlignment="Center" RecognizesAccessKey="True" ContentSource="Header" Opacity="0.5"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Panel.ZIndex" Value="100"/>
							<Setter Property="BorderThickness" Value="1,1,1,0" TargetName="Border"/>
							<Setter Property="Background" TargetName="Border" Value="{DynamicResource BTTBrush}"/>
							<Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource ContentBrush}"/>
							<Setter Property="Opacity" TargetName="ContentSite" Value="1"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
							<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
							<Setter Property="Background" TargetName="Border" Value="{DynamicResource DisabledBrush}"/>
							<Setter Property="Opacity" TargetName="ContentSite" Value="0.3"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<CornerRadius x:Key="RoundWindowsBorder">10,10,0,10</CornerRadius>
	<Thickness x:Key="WindowsBorderThickness">2</Thickness>
	<System:Double x:Key="InputWidth">100</System:Double>
</ResourceDictionary>